// General reset styles
*
{
	color: $content-color;
}

.bar.app-top-bar
{
	background: $top-bar-bg;

	.title
	{
		color: $top-bar-color !important;
		*
		{
			color: $top-bar-color !important;
		}
	}

	.button
	{
		color: $top-bar-color !important;
		*
		{
			color: $top-bar-color !important;
		}
	}
}

// Preload images aux styles (ratios)
// Auto generate ratios for the whole app (see: http://stackoverflow.com/a/18120181/1116959)
@each $ratio in $pre-img-ratios {
  .pre-img._#{nth($ratio, 1)}_#{nth($ratio, 2)}
  {
    // Conserve aspect ratio (see: http://stackoverflow.com/a/10441480/1116959)
    width: 100%;
    padding-bottom: #{(nth($ratio, 2) / nth($ratio, 1)) * 100}%;
  }
}

.pre-img
{
  position: relative;
  background-color: $pre-img-bg;

	// If the image is rounded
	&.rounded-image
	{
		border-radius: 50%;
	}

  &.finish-loading
  {
    background-color: transparent;
    border: none;

		img
	  {
			visibility: visible;
			opacity: 1;
	  }
  }

  img
  {
    position: absolute;
		left: 0px;
		top: 0px;
		visibility: hidden;
		opacity: 0;
		@include transition(visibility 0s linear, opacity 0.5s linear);
  }
}

// spinner-on-load
@include keyframes(spin) {
  from {
    @include transform(rotate(0deg));
  }
  to {
    @include transform(rotate(359deg));
  }
}
.spinner-on-load
{
	position: absolute;
	font-size: $spinner-size;
	width: $spinner-size;
	height: $spinner-size;
	line-height: $spinner-size;
  color: $spinner-color;
	@include animation(spin 2s infinite linear);
	@include calc(top, "50% - #{($spinner-size/2)}");
	@include calc(left, "50% - #{($spinner-size/2)}");
}
ion-spinner.spinner-on-load
{
	@include animation(none);
  stroke: $spinner-color;
	width: $spinner-svg-size;
  height: $spinner-svg-size;
	line-height: inherit;
	@include calc(top, "50% - #{($spinner-svg-size/2)}");
	@include calc(left, "50% - #{($spinner-svg-size/2)}");
}

// Multimedia background
.multi-bg-outer
{
  position: relative;
  background-color: rgba(darken($multi-bg, 10%), 0.7);
  height: 100%;
  @include transition(all ease-in-out .3s);

  background-size: cover;
  background-repeat: no-repeat;
  z-index: -2;

  &.finish-loading
  {
    background-color: transparent;
  }

  .bg-overlay
  {
    position: absolute;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
    background-color: $overlay-bg;
    z-index: -1;
    opacity: 0.6;
  }

  .multi-bg
  {
    display: none;
  }
}

.loading-container .loading
{
	background-color: $loading-background-color;
  *
  {
    color: darken($loading-color, 5);
		font-weight: 500;
  }
}

h1 {
	font-family: 'eb garamond';
	font-variant: small-caps;
}


@media (max-width:680px) {
	.logo {
		width: 230px;
	}
}

.auth-view .row {
	height: 60vh!important;
}

.logo-subpage-wrap {
	margin: 0 auto;
	margin-top: 30px;
	text-align: center;
	height: 20vh;
}

.alternative-actions a.sign-up.button.button-small.button-clear {
	min-width:50px;
	width: 20%;
}

a.tab-item i.icon {
	font-size: 1.5rem;
}

i.icon, a.tab-item span.tab-title {
	color: white;
}

#menu-dashboard-content {
	top:64px;
}

.bar {
	height: 64px;
}

.has-header {
	top:64px;
}

img.user-image.profile-page {
	
	border-radius: 50%;
	width:8vh;
	height: 8vh;
	top:1.5vh;
	right: 0;
	left: auto!important;
}

.bar .title {
	height: 64px;
}

.nav-bar-title {
	text-transform: capitalize;
	font: 600 18px $font2;
}

.profile-view .row.heading {
	background-color: #f6f6f6;	
	border-bottom: 1px solid #959595;
}